import java.util.Properties

plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.gms.google-services'
}

android {
    namespace = "com.example.android_project"
    compileSdk = 35

    // === Configuración del keystore opcional ===
    def keystorePropertiesFile = rootProject.file("keystore.properties")
    def keystoreProperties = new Properties()
    def keystoreExists = keystorePropertiesFile.exists()

    if (keystoreExists) {
        keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
    } else {
        println "⚠️ No se encontró keystore.properties. Se usará debug keystore."
    }

    defaultConfig {
        applicationId = "com.example.android_project"
        minSdk = 26
        targetSdk = 35
        versionCode = 1
        versionName = "1.0"

        testInstrumentationRunner = "androidx.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            if (keystoreExists) {
                keyAlias keystoreProperties['keyAlias']
                keyPassword keystoreProperties['keyPassword']
                storeFile rootProject.file(keystoreProperties['storeFile'])
                storePassword keystoreProperties['storePassword']
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled = false
            if (keystoreExists) {
                signingConfig signingConfigs.release
            }
            proguardFiles(
                    getDefaultProguardFile("proguard-android-optimize.txt"),
                    "proguard-rules.pro"
            )
        }

        debug {
            // En CI usar el keystore release si existe, de lo contrario debug normal
            if (System.getenv("CI") != null && keystoreExists) {
                signingConfig signingConfigs.release
            } else {
                println "ℹ️ Usando firma debug por defecto"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }

    kotlinOptions {
        jvmTarget = '11'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion '1.5.15'
    }

    packaging {
        jniLibs {
            useLegacyPackaging = false
        }
    }
}

dependencies {
    // --- Core Android ---
    implementation 'androidx.core:core-ktx:1.13.1'
    implementation 'androidx.appcompat:appcompat:1.7.0'
    implementation 'com.google.android.material:material:1.12.0'

    // --- Compose ---
    implementation platform("androidx.compose:compose-bom:2024.09.01")
    implementation "androidx.compose.ui:ui"
    implementation "androidx.compose.foundation:foundation"
    implementation "androidx.compose.material3:material3"
    implementation "androidx.compose.ui:ui-tooling-preview"
    debugImplementation "androidx.compose.ui:ui-tooling"

    // --- Navigation Compose ---
    implementation "androidx.navigation:navigation-compose:2.7.7"

    // --- Firebase ---
    implementation platform("com.google.firebase:firebase-bom:33.5.1")
    implementation "com.google.firebase:firebase-auth-ktx"
    implementation "com.google.firebase:firebase-firestore-ktx"
    implementation "com.google.android.gms:play-services-auth:20.7.0"

    // --- Tests ---
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    androidTestImplementation platform("androidx.compose:compose-bom:2024.09.01")
    androidTestImplementation "androidx.compose.ui:ui-test-junit4"
    debugImplementation "androidx.compose.ui:ui-test-manifest"
}
